import{instanciarAnalizadorLexicoGramaticas,parseAFDFile}from"./parser_utils.js";import{Grammar}from"./grammar.js";import{AnalizadorLexico,SimbolosEspeciales}from"./analizador_lexico.js";import{leerArchivo}from"./file_utils.js";import{agregarFilaLexResults,limpiarTablasSimbolos}from"./dom_utils.js";import{generarTablaLL1}from"./sintactic_ll1.js";const appState={userAutomata:null,userLexAnalyzer:null,currentGrammar:null,grammarUpdateTimeout:null,currentMode:"lex",ll1Table:null,tokensAssigned:!1};async function actualizarGrammarDesdeTexto(){const e=document.getElementById("grammarText").value.trim();if(""===e)return void limpiarTablasSimbolos();const t=await instanciarAnalizadorLexicoGramaticas(e);if(!t)return void limpiarTablasSimbolos();const a=new Grammar(t);await a.parse()?actualizarTablasDeSimbolos(a):limpiarTablasSimbolos()}function actualizarTablasDeSimbolos(e){e.updateNodos();const t=document.getElementById("noterm"),a=document.getElementById("term");t.innerHTML="",a.innerHTML="",appState.currentGrammar=e;const r=e.SimbNoTerm,n=new Set;for(let t=0;t<e.NumReglas;t++)for(let a of e.Reglas[t].Lista)a.EsTerminal&&"ε"!==a.NombSimb&&n.add(a.NombSimb);r.forEach((e=>{t.insertRow().insertCell().textContent=e})),n.forEach((e=>{const t=a.insertRow();t.insertCell().textContent=e;const r=t.insertCell(),n=document.createElement("input");n.type="text",n.size=5,n.placeholder="Token",appState.currentGrammar.TerminalesTokens[e]&&(n.value=appState.currentGrammar.TerminalesTokens[e]),r.appendChild(n)}))}function obtenerTerminalesSinToken(e){const t=new Set;for(let a=0;a<e.NumReglas;a++)for(let r of e.Reglas[a].Lista)r.EsTerminal&&"ε"!==r.NombSimb&&t.add(r.NombSimb);const a=[];for(let r of t)void 0===e.TerminalesTokens[r]&&a.push(r);return a}function mostrarTablaLL1EnInterfaz(e){const t=document.querySelector(".table-results__table");t.innerHTML="";const a=appState.currentGrammar,r=a.Reglas.map(((e,t)=>{const a=e.Lista.map((e=>e.NombSimb)).join(" ");return e.NombSimb+" -> "+a})),n=Array.from(a.SimbNoTerm),o=new Set;for(let e=0;e<a.NumReglas;e++)for(let t of a.Reglas[e].Lista)t.EsTerminal&&"ε"!==t.NombSimb&&o.add(t.NombSimb);const l=Array.from(o),i=[...l,"FIN"],s=[...n,...l],m=t.insertRow();m.insertCell().textContent="Simb/Term";for(let e of i){m.insertCell().textContent=e}for(let n of s){const o=t.insertRow();if(o.insertCell().textContent=n,a.SimbNoTerm.has(n))for(let t of i){const a=o.insertCell(),l=e[n][t];a.textContent=void 0!==l?r[l]:"error"}else for(let e of i){const t=o.insertCell();t.textContent=e===n?"pop":"error"}}}function analizarSintacticamente(e,t,a,r){const n=new AnalizadorLexico(e,r);let o,l=[],i=[];for(;0!==(o=n.yylex())&&o!==SimbolosEspeciales.ERROR;)l.push(o),i.push(n.getLexema());if(o===SimbolosEspeciales.ERROR)return[{stack:"",input:e,operation:"Error léxico"}];l.push("FIN"),i.push("$");let s=["FIN",t.Reglas[0].NombSimb],m=[],c=0;function p(){return s.slice().reverse().join(" ")}function d(){return i.slice(c).join(" ")}function u(e){for(let[a,r]of Object.entries(t.TerminalesTokens))if(r===e)return a;return"FIN"===e?"FIN":null}for(m.push({stack:p(),input:d(),operation:"Iniciar"});;){let e=s[s.length-1],r=l[c];i[c];if("FIN"===e&&"FIN"===r){m.push({stack:p(),input:d(),operation:"aceptar"});break}if("ε"!==e)if(esTerminal(e,t)){let a=t.TerminalesTokens[e];if("FIN"===e&&(a="FIN"),"$"===e&&(a="FIN"),a!==r&&("$"!==e||"FIN"!==r)){m.push({stack:p(),input:d(),operation:"error"});break}s.pop(),c++,m.push({stack:p(),input:d(),operation:"pop"})}else{let n=u(r);if(!n){m.push({stack:p(),input:d(),operation:"error"});break}let o=a[e][n];if(void 0===o&&"FIN"===r&&(o=a[e].FIN),void 0===o){m.push({stack:p(),input:d(),operation:"error"});break}s.pop();const l=t.Reglas[o],i=l.Lista.map((e=>e.NombSimb)).join(" ");for(let e=l.Lista.length-1;e>=0;e--){let t=l.Lista[e].NombSimb;s.push(t)}m.push({stack:p(),input:d(),operation:e+" -> "+i})}else s.pop(),m.push({stack:p(),input:d(),operation:"Desapilar ε"})}return m}function esTerminal(e,t){return"FIN"!==e&&("ε"===e||!t.SimbNoTerm.has(e))}window.onbeforeunload=function(){window.scrollTo(0,0)},document.addEventListener("DOMContentLoaded",(async()=>{const e=document.getElementById("matrizInput"),t=document.getElementById("cargarAFD"),a=document.getElementById("testLex"),r=document.getElementById("lexResults"),n=document.getElementById("grammarText"),o=document.getElementById("asignarTokens"),l=document.getElementById("crearTablaLL1"),i=document.getElementById("analizlex"),s=document.getElementById("analizsintact"),m=document.getElementById("lex"),c=document.getElementById("sintact");let p=document.createElement("button");p.textContent="Ir a asignación de tokens",p.className="info__button",p.style.display="none",document.getElementById("lex").appendChild(p),s.disabled=!0,a.disabled=!0,o.disabled=!0,l.disabled=!0,m.style.display="block",c.style.display="none",a.textContent="Analizar Léxicamente",appState.currentMode="lex",i.checked=!0,i.addEventListener("change",(()=>{i.checked&&(m.style.display="block",c.style.display="none",a.textContent="Analizar Léxicamente",appState.currentMode="lex")})),s.addEventListener("change",(()=>{s.checked&&(m.style.display="none",c.style.display="block",a.textContent="Analizar Sintácticamente",appState.currentMode="sintact")})),t.addEventListener("click",(()=>{e.click()})),e.addEventListener("change",(async e=>{const t=e.target.files[0];if(t)try{const e=await leerArchivo(t);appState.userAutomata=parseAFDFile(e),appState.userLexAnalyzer=new AnalizadorLexico("",appState.userAutomata),console.log("Autómata cargado exitosamente."),a.disabled=!1,alert("AFD Cargado. Ahora puede realizar análisis léxico."),a.classList.add("highlight");const r=document.getElementById("lex");r&&r.scrollIntoView({behavior:"smooth"})}catch(e){console.error("Error al cargar el autómata:",e),alert("Error al cargar el autómata. Ver consola para detalles.")}})),a.addEventListener("click",(()=>{const e=document.getElementById("sigma").value.trim();if("lex"===appState.currentMode){if(!appState.userLexAnalyzer)return void alert("Primero carga el AFD.");let t;for(r.innerHTML="",appState.userLexAnalyzer.setSigma(e);0!==(t=appState.userLexAnalyzer.yylex())&&t!==SimbolosEspeciales.ERROR;){const e=appState.userLexAnalyzer.getLexema();agregarFilaLexResults(r,e,t)}if(0===t){console.log("Fin de entrada (análisis usuario)."),agregarFilaLexResults(r,"FIN","0"),alert("Análisis léxico completado. Ahora asigne tokens a los terminales."),p.style.display="block",a.classList.remove("highlight"),p.classList.add("highlight");const e=m.getBoundingClientRect(),t=window.scrollY+e.top+64;window.scrollTo({top:t,behavior:"smooth"})}else t===SimbolosEspeciales.ERROR&&(agregarFilaLexResults(r,appState.userLexAnalyzer.getLexema(),"ERROR"),alert("Error léxico encontrado, revise su cadena sigma."))}else{if(!appState.userLexAnalyzer)return void alert("No se ha cargado el AFD.");if(!appState.ll1Table||!appState.currentGrammar)return void alert("No se ha generado la tabla LL1. Por favor genera la tabla LL1 primero.");const t=document.querySelector("#sintact .result__table");t.innerHTML="";const a=analizarSintacticamente(e,appState.currentGrammar,appState.ll1Table,appState.userAutomata),r=t.insertRow();r.insertCell().textContent="Pila",r.insertCell().textContent="Sigma",r.insertCell().textContent="Operación";for(let e of a){const a=t.insertRow();a.insertCell().textContent=e.stack,a.insertCell().textContent=e.input,a.insertCell().textContent=e.operation}}})),p.addEventListener("click",(()=>{document.querySelector(".grammar").scrollIntoView({behavior:"smooth"}),p.classList.remove("highlight"),o.disabled=!1,o.classList.add("highlight")})),n.addEventListener("input",(()=>{appState.grammarUpdateTimeout&&clearTimeout(appState.grammarUpdateTimeout),appState.grammarUpdateTimeout=setTimeout((()=>{actualizarGrammarDesdeTexto()}),500)})),o.addEventListener("click",(()=>{if(!appState.currentGrammar)return void console.warn("No hay una gramática parseada actualmente.");const e=document.getElementById("term");let t=!0;for(let a=0;a<e.rows.length;a++){const r=e.rows[a],n=r.cells[0].textContent,o=r.cells[1].querySelector('input[type="text"]').value.trim();""===o||isNaN(o)?(delete appState.currentGrammar.TerminalesTokens[n],t=!1):appState.currentGrammar.TerminalesTokens[n]=parseInt(o,10)}console.log("Asignaciones de tokens a terminales:");for(let[e,t]of Object.entries(appState.currentGrammar.TerminalesTokens))console.log(e,"->",t);t?(alert("Tokens asignados correctamente."),appState.tokensAssigned=!0,o.classList.remove("highlight"),l.disabled=!1,l.classList.add("highlight")):alert("Algunos terminales no tienen token asignado.")})),l.addEventListener("click",(()=>{if(!appState.currentGrammar)return void alert("No hay una gramática parseada. Por favor, escribe una gramática válida.");const e=obtenerTerminalesSinToken(appState.currentGrammar);e.length>0?alert("Los siguientes terminales no tienen token asignado: "+e.join(", ")):appState.userAutomata?(appState.currentGrammar.removeLeftRecursion(),appState.ll1Table=generarTablaLL1(appState.currentGrammar),console.log("Tabla LL1 generada:"),console.log(appState.ll1Table),mostrarTablaLL1EnInterfaz(appState.ll1Table),alert("Tabla LL1 generada con éxito. Ahora puede realizar el análisis sintáctico."),l.classList.remove("highlight"),s.disabled=!1,document.querySelector(".table-results").scrollIntoView({behavior:"smooth"})):alert("No se ha cargado el archivo de la matriz de transición AFD.")}))}));
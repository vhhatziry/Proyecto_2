import{Nodo,ElemArreglo}from"./nodos.js";import{SimbolosEspeciales}from"./analizador_lexico.js";class Grammar{constructor(e){this.Lexic=e,this.Reglas=[],this.NumReglas=0,this.SimbNoTerm=new Set,this.TerminalesTokens={}}async parse(){return await this.LlenarArreglo()}async LlenarArreglo(){if(this.G()){if(0===this.Lexic.yylex())return this.updateNodos(),!0}return!1}G(){return this.Reglas_()}Reglas_(){if(this.Regla()){if(50===this.Lexic.yylex())return this.ReglasPrime()}return!1}ReglasPrime(){let e=this.Lexic.yylex();if(0===e)return this.Lexic.undoToken(),!0;if(40===e){if(this.Lexic.undoToken(),this.Regla()){return 50===this.Lexic.yylex()&&this.ReglasPrime()}return!1}return this.Lexic.undoToken(),!0}Regla(){let e={value:""};if(this.LadoIzq(e)){if(20===this.Lexic.yylex())return this.LadosDerechos(e.value)}return!1}LadoIzq(e){if(40===this.Lexic.yylex()){let s=this.Lexic.getLexema();return s.startsWith("<")&&s.endsWith(">")&&(s=s.substring(1,s.length-1)),e.value=s,this.SimbNoTerm.add(s),!0}return!1}LadosDerechos(e){let s=[];if(this.LadoDerecho(s)){let i=new ElemArreglo;return i.NombSimb=e,i.Lista=s,i.EsTerminal=!1,this.Reglas[this.NumReglas++]=i,this.LadosDerechosPrime(e)}return!1}LadosDerechosPrime(e){if(30===this.Lexic.yylex()){let s=this.Lexic.yylex();if(40===s){this.Lexic.undoToken();let s=[];if(this.LadoDerecho(s)){let i=new ElemArreglo;return i.NombSimb=e,i.Lista=s,i.EsTerminal=!1,this.Reglas[this.NumReglas++]=i,this.LadosDerechosPrime(e)}return!1}if(10===s){let s=[],i=new Nodo("ε",!0);s.push(i);let t=new ElemArreglo;return t.NombSimb=e,t.Lista=s,t.EsTerminal=!1,this.Reglas[this.NumReglas++]=t,this.LadosDerechosPrime(e)}return!1}return this.Lexic.undoToken(),!0}LadoDerecho(e){return this.Simbolos(e)}Simbolos(e){if(40===this.Lexic.yylex()){let s=this.Lexic.getLexema();s.startsWith("<")&&s.endsWith(">")&&(s=s.substring(1,s.length-1));let i=new Nodo(s,!1);return e.push(i),!!this.SimbolosPrime(e)}return this.Lexic.undoToken(),!0}SimbolosPrime(e){if(40===this.Lexic.yylex()){let s=this.Lexic.getLexema();s.startsWith("<")&&s.endsWith(">")&&(s=s.substring(1,s.length-1));let i=new Nodo(s,!1);return e.push(i),!!this.SimbolosPrime(e)}return this.Lexic.undoToken(),!0}updateNodos(){for(let e=0;e<this.NumReglas;e++)for(let s of this.Reglas[e].Lista)this.SimbNoTerm.has(s.NombSimb)?s.EsTerminal=!1:s.EsTerminal=!0}removeLeftRecursion(){const e=new Map;for(let s=0;s<this.NumReglas;s++){const i=this.Reglas[s],t=i.NombSimb;e.has(t)||e.set(t,[]),e.get(t).push(i)}this.Reglas=[],this.NumReglas=0;for(let[s,i]of e.entries()){let e=[],t=[];for(let r of i)r.Lista.length>0&&r.Lista[0].NombSimb===s&&!r.Lista[0].EsTerminal?e.push(r):t.push(r);if(0===e.length)for(let e of t)this.Reglas.push(e),this.NumReglas++;else{let i=s+"'";for(;this.SimbNoTerm.has(i);)i+="'";this.SimbNoTerm.add(i);for(let e of t){let t=new ElemArreglo;t.NombSimb=s,t.Lista=[...e.Lista,new Nodo(i,!1)],this.Reglas.push(t),this.NumReglas++}let r=!1;for(let s of e){let e=new ElemArreglo;e.NombSimb=i;let t=s.Lista.slice(1);t.push(new Nodo(i,!1)),e.Lista=t,this.Reglas.push(e),this.NumReglas++,r=!0}let o=new ElemArreglo;o.NombSimb=i,o.Lista=[new Nodo("ε",!0)],this.Reglas.push(o),this.NumReglas++}}}}export{Grammar};